package main

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
)

var testBITS1 = map[string]int{
	"100010100000000001001010100000000001101010000000000000101111010001111000":                                                 16,
	"01100010000000001000000000000000000101100001000101010110001011001000100000000010000100011000111000110100":                 12,
	"1100000000000001010100000000000000000001011000010001010110100010111000001000000000101111000110000010001101000000":         23,
	"101000000000000101101100100010000000000101100010000000010111110000110110100001101011000110001010001111010100011110000000": 31,
}

func TestPart1(t *testing.T) {
	for bufferData, ans := range testBITS1 {
		assert.Equal(t, ans, VersionSum(bytes.NewBuffer([]byte(bufferData))))
	}
}

var testBITS2 = map[string]int{
	"1100001000000000101101000000101010000010":                                                                 3,
	"000001000000000001011010110000110011100010010000":                                                         54,
	"10001000000000001000011011000011111010001000000100010010":                                                 7,
	"11001110000000001100010000111101100010000001000100100000":                                                 9,
	"110110000000000001011010110000101010100011110000":                                                         1,
	"1111011000000000101111000010110110001111":                                                                 0,
	"100111000000000001011010110000101111100011110000":                                                         0,
	"10011100000000010100000100001000000000100101000000110010000011110001100000000010000100000100101000001000": 1,
}

func TestPart2(t *testing.T) {
	for bufferData, ans := range testBITS2 {
		assert.Equal(t, ans, ReadPacket(bytes.NewBuffer([]byte(bufferData))))
	}
}
