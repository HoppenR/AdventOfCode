package main

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

var exampleInput = []Tile{
	{
		ID: 2311,
		content: [][]byte{
			[]byte("..##.#..#."),
			[]byte("##..#....."),
			[]byte("#...##..#."),
			[]byte("####.#...#"),
			[]byte("##.##.###."),
			[]byte("##...#.###"),
			[]byte(".#.#.#..##"),
			[]byte("..#....#.."),
			[]byte("###...#.#."),
			[]byte("..###..###")},
	},
	{
		ID: 1951,
		content: [][]byte{
			[]byte("#.##...##."),
			[]byte("#.####...#"),
			[]byte(".....#..##"),
			[]byte("#...######"),
			[]byte(".##.#....#"),
			[]byte(".###.#####"),
			[]byte("###.##.##."),
			[]byte(".###....#."),
			[]byte("..#.#..#.#"),
			[]byte("#...##.#..")},
	},
	{
		ID: 1171,
		content: [][]byte{
			[]byte("####...##."),
			[]byte("#..##.#..#"),
			[]byte("##.#..#.#."),
			[]byte(".###.####."),
			[]byte("..###.####"),
			[]byte(".##....##."),
			[]byte(".#...####."),
			[]byte("#.##.####."),
			[]byte("####..#..."),
			[]byte(".....##...")},
	},
	{
		ID: 1427,
		content: [][]byte{
			[]byte("###.##.#.."),
			[]byte(".#..#.##.."),
			[]byte(".#.##.#..#"),
			[]byte("#.#.#.##.#"),
			[]byte("....#...##"),
			[]byte("...##..##."),
			[]byte("...#.#####"),
			[]byte(".#.####.#."),
			[]byte("..#..###.#"),
			[]byte("..##.#..#.")},
	},
	{
		ID: 1489,
		content: [][]byte{
			[]byte("##.#.#...."),
			[]byte("..##...#.."),
			[]byte(".##..##..."),
			[]byte("..#...#..."),
			[]byte("#####...#."),
			[]byte("#..#.#.#.#"),
			[]byte("...#.#.#.."),
			[]byte("##.#...##."),
			[]byte("..##.##.##"),
			[]byte("###.##.#..")},
	},
	{
		ID: 2473,
		content: [][]byte{
			[]byte("#....####."),
			[]byte("#..#.##..."),
			[]byte("#.##..#..."),
			[]byte("######.#.#"),
			[]byte(".#...#.#.#"),
			[]byte(".#########"),
			[]byte(".###.#..#."),
			[]byte("########.#"),
			[]byte("##...##.#."),
			[]byte("..###.#.#.")},
	},
	{
		ID: 2971,
		content: [][]byte{
			[]byte("..#.#....#"),
			[]byte("#...###..."),
			[]byte("#.#.###..."),
			[]byte("##.##..#.."),
			[]byte(".#####..##"),
			[]byte(".#..####.#"),
			[]byte("#..#.#..#."),
			[]byte("..####.###"),
			[]byte("..#.#.###."),
			[]byte("...#.#.#.#")},
	},
	{
		ID: 2729,
		content: [][]byte{
			[]byte("...#.#.#.#"),
			[]byte("####.#...."),
			[]byte("..#.#....."),
			[]byte("....#..#.#"),
			[]byte(".##..##.#."),
			[]byte(".#.####..."),
			[]byte("####.#.#.."),
			[]byte("##.####..."),
			[]byte("##..#.##.."),
			[]byte("#.##...##.")},
	},
	{
		ID: 3079,
		content: [][]byte{
			[]byte("#.#.#####."),
			[]byte(".#..######"),
			[]byte("..#......."),
			[]byte("######...."),
			[]byte("####.#..#."),
			[]byte(".#...#.##."),
			[]byte("#.#####.##"),
			[]byte("..#.###..."),
			[]byte("..#......."),
			[]byte("..#.###...")},
	},
}

func TestPart1(t *testing.T) {
	assert.Equal(t, 20899048083289, UniqueIDScore(exampleInput))
}

func TestPart2(t *testing.T) {
	assert.Equal(t, 0, func() int { return 0 }())
}
